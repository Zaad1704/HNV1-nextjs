"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = require("express");
const superAdminController_1 = require("../controllers/superAdminController");
const authMiddleware_1 = require("../middleware/authMiddleware");
const uploadMiddleware_1 = __importDefault(require("../middleware/uploadMiddleware"));
const router = (0, express_1.Router)();
router.use(authMiddleware_1.protect);
router.use((0, authMiddleware_1.authorize)('Super Admin', 'Super Moderator'));
router.get('/dashboard-stats', superAdminController_1.getDashboardStats);
router.get('/plan-distribution', superAdminController_1.getPlanDistribution);
router.get('/platform-growth', superAdminController_1.getPlatformGrowth);
router.get('/email-status', superAdminController_1.getEmailStatus);
router.get('/organizations', superAdminController_1.getOrganizations);
router.delete('/organizations/:orgId', (0, authMiddleware_1.authorize)('Super Admin'), superAdminController_1.deleteOrganization);
router.patch('/organizations/:orgId/activate', superAdminController_1.activateOrganization);
router.patch('/organizations/:orgId/deactivate', superAdminController_1.deactivateOrganization);
router.patch('/organizations/:orgId/grant-lifetime', (0, authMiddleware_1.authorize)('Super Admin'), superAdminController_1.grantLifetime);
router.patch('/organizations/:orgId/revoke-lifetime', (0, authMiddleware_1.authorize)('Super Admin'), superAdminController_1.revokeLifetime);
router.put('/organizations/:orgId/subscription', (0, authMiddleware_1.authorize)('Super Admin'), superAdminController_1.updateSubscription);
router.get('/users', superAdminController_1.getUsers);
router.delete('/users/:userId', (0, authMiddleware_1.authorize)('Super Admin'), superAdminController_1.deleteUser);
router.put('/users/:userId/status', superAdminController_1.updateUserStatus);
router.get('/plans', superAdminController_1.getPlans);
router.post('/plans', (0, authMiddleware_1.authorize)('Super Admin'), superAdminController_1.createPlan);
router.put('/plans/:id', (0, authMiddleware_1.authorize)('Super Admin'), superAdminController_1.updatePlan);
router.delete('/plans/:id', (0, authMiddleware_1.authorize)('Super Admin'), superAdminController_1.deletePlan);
router.put('/plans/:id/activate', (0, authMiddleware_1.authorize)('Super Admin'), superAdminController_1.activatePlan);
router.get('/moderators', (0, authMiddleware_1.authorize)('Super Admin'), superAdminController_1.getModerators);
router.post('/moderators', (0, authMiddleware_1.authorize)('Super Admin'), superAdminController_1.createModerator);
router.put('/moderators/:id', (0, authMiddleware_1.authorize)('Super Admin'), superAdminController_1.updateModerator);
router.delete('/moderators/:id', (0, authMiddleware_1.authorize)('Super Admin'), superAdminController_1.deleteModerator);
router.get('/moderator-permissions', (0, authMiddleware_1.authorize)('Super Admin'), superAdminController_1.getModeratorPermissions);
router.put('/site-settings', (0, authMiddleware_1.authorize)('Super Admin'), superAdminController_1.updateSiteSettings);
router.put('/site-content/:section', (0, authMiddleware_1.authorize)('Super Admin'), superAdminController_1.updateSiteContent);
router.post('/upload-image', (0, authMiddleware_1.authorize)('Super Admin'), uploadMiddleware_1.default.single('image'), superAdminController_1.uploadImage);
router.get('/billing', superAdminController_1.getBilling);
router.get('/settings', (req, res) => {
    res.json({ success: true, data: { role: req.user?.role, name: req.user?.name } });
});
exports.default = router;
